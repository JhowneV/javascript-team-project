{"mappings":"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","sources":["src/js/script.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'api_key=b5e824a3d922f68ba211fcf6dbdcb6f5';\nconst API_URL = BASE_URL + '/discover/movie?sort_by-popularity.desc&' + API_KEY;\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\nconst searchURL = BASE_URL + '/search/movie?'+API_KEY;\n\nconst options = {\n    params: {\n        key: API_KEY,\n        query: \"\",\n        include_adult: false,\n        language: \"en-US\",\n        primary_release_year: \"\",\n        page: 1,\n        region: \"\",\n        year: \"\",\n       \n    }\n}\n\nconst main = document.getElementById('main');\nconst form = document.getElementById('search-form');\nconst search = document.getElementById('search-input');\nconst galleryEl = document.getElementById('gallery');\n\n// PAGINATION\nconst prev = document.getElementById('prev');\nconst next = document.getElementById('next');\nconst current = document.getElementById('current');\n\nvar currentPage = 1;\nvar nextPage = 2;\nvar prevPage = 3;\nvar lastUrl = '';\nvar totalPages = 100;\n\ngetMovies(API_URL);\n\n// DISPLAY MOVIE CARDS\nfunction getMovies(url) {\n    lastUrl = url;\n\n    fetch(url)\n        .then(res => res.json())\n        .then(data => {\n            console.log(data.results)\n            if(data.results.length !== 0){\n                showMovies(data.results);\n                currentPage = data.page;\n                nextPage = currentPage + 1;\n                prevPage = currentPage - 1;\n                totalPages = data.total_pages;\n\n                current.innerText = currentPage;\n                if(currentPage <= 1){\n                    prev.classList.add('disabled');\n                    next.classList.remove('disabled');\n                } else if(currentPage >= totalPages){\n                    prev.classList.remove('disabled');\n                    next.classList.add('disabled');\n                } else {\n                    prev.classList.remove('disabled');\n                    next.classList.remove('disabled');\n                }\n\n            } else {\n                main.innerHTML = `<h1 class=\"no-results\">No Results Found</h1>`\n            }\n\n    })\n}\n\nfunction showMovies(data) {\n    main.innerHTML = '';\n\n    data.forEach(movie => {\n        const { title, poster_path, release_date } = movie;\n        const movieEl = document.createElement('div');\n        movieEl.classList.add('movie');\n        movieEl.innerHTML = `\n            <img src=\"${poster_path? IMG_URL+poster_path: \"http:/>/via.placeholder.com/1080x1500\"}\"\n                alt=\"${title}\"/>\n            \n            <div class=\"movie-info\">\n                <h3>${title}</h3>\n                <div class=\"movie-details\">\n                    <span id=\"release_date\" class=\"${release_date}\">${release_date}</span>\n                </div>\n            </div>        \n        `\n        main.appendChild(movieEl);\n    })\n}\n\nform.addEventListener('submit', (e) => {\n    e.preventDefault();\n\n    const searchTerm = search.value;\n    \n    if(searchTerm) {\n        getMovies(searchURL+'&query='+searchTerm)\n    }else{\n        getMovies(API_URL);\n    }\n})\n\n\n// function for previous page\nprev.addEventListener('click', () => {\n    if(prevPage > 0) {\n        pageCall(prevPage);\n    }\n})\n\n// function for the next page\nnext.addEventListener('click', () => {\n    if(nextPage <= totalPages) {\n        pageCall(nextPage);\n    }\n})\n\nfunction pageCall(page) {\n    let urlSplit = lastUrl.split('?');\n    let queryParams = urlSplit[1].split('&');\n    let key = queryParams[queryParams.length - 1].split('=');\n    if(key[0] != 'page') {\n        let url = lastUrl + '&page=' + page;\n        getMovies(url);\n    }else{\n        key[1] = page.toString();\n        let a = key.join('=');\n        queryParams[queryParams.length - 1] = a;\n        let b = queryParams.join('&');\n        let url = urlSplit[0] +'?'+ b;\n        getMovies(url);\n    }\n}\n// //////////////////////////////////////////////////////////////////////////////////\n// ///watched and queue button\n\n// const watchedButton = document.getElementById('watched-btn');\n// const queueButton = document.getElementById('queue-btn');\n\n// // Add event listeners to the buttons\n// watchedButton.addEventListener('click', handleWatchedButtonClick);\n// queueButton.addEventListener('click', handleQueueButtonClick);\n\n// // Function to handle clicking the \"Watched\" button\n// function handleWatchedButtonClick() {\n//     // Perform actions when the \"Watched\" button is clicked\n//     console.log('Watched button clicked');\n//     // You can add code here to display watched movies or perform other actions\n// //////Watched Movies\n\n// function displayWatchedMovies() {\n//     // Initialize watched variable with data from localStorage\n//     const watchedMovies = JSON.parse(localStorage.getItem('watchedMovies')) || [];\n\n//     watchedMovies.forEach(movieId => {\n//         fetch(`https://api.themoviedb.org/3/movie/${watched - movies}?api_key=YOUR_ACTUAL_API_KEY`)\n//             .then(response => {\n//                 if (!response.ok) {\n//                     throw new Error('Network response was not ok');\n//                 }\n//                 return response.json();\n//             })\n//             .then(data => {\n//                 displayMovie(data);\n//             })\n//             .catch(error => {\n//                 console.error('Error fetching movie:', error);\n//             });\n//     });\n// }\n\n// function displayMovie(movie) {\n//     const moviesList = document.getElementById('main');\n//     const movieElement = document.createElement('div');\n//     movieElement.innerHTML = `\n//         <h3>${movie.title}</h3>\n//         <p>${movie.overview}</p>\n//         <img src=\"https://image.tmdb.org/t/p/w500${movie.poster_path}\" alt=\"${movie.title}\">\n//     `;\n//     moviesList.appendChild(movieElement);\n// }\n\n// // Call the function to display watched movies when the page loads\n// window.onload = function() {\n//     displayWatchedMovies();\n// };\n// }\n\n// // Function to handle clicking the \"Queue\" button\n// function handleQueueButtonClick() {\n//     // Perform actions when the \"Queue\" button is clicked\n//     console.log('Queue button clicked');\n//     // You can add code here to display queued movies or perform other actions\n// /////////////////////////////////////////\n// ///     Queu \n\n// }\n\n////////////////////////////////////////////////////////////////////////////////\n//Library button\n\n// Wait for the DOM content to be fully loaded\ndocument.addEventListener('DOMContentLoaded', function() {\n    // Get the library navbar button\n    const libraryButton = document.querySelector('.header-link.libr');\n\n    // Simulate a click on the library navbar button\n    libraryButton.click();\n});\n\n//////////////////////////////////////////////////////////////////////////////////////////\n// Get references to the buttons\nconst watchedButton = document.getElementById('watched-btn');\nconst queueButton = document.getElementById('queue-btn');\n\n// Add event listeners to the buttons\nwatchedButton.addEventListener('click', displayWatchedMovies);\nqueueButton.addEventListener('click', displayQueue);\n\n// Function to display watched movies\nfunction displayWatchedMovies() {\n    // Retrieve watched movies data from local storage\n    const watchedMovies = JSON.parse(localStorage.getItem('watchedMovies')) || [];\n\n    // Clear previous content from movies-container\n    const moviesContainer = document.getElementById('movies-container');\n    moviesContainer.innerHTML = '';\n\n    // Display each watched movie\n    watchedMovies.forEach(movie => {\n        const movieElement = createMovieElement(movie);\n        moviesContainer.appendChild(movieElement);\n    });\n}\n\n// Function to display queue movies\nfunction displayQueue() {\n    // Retrieve queue movies data from local storage\n    const queueMovies = JSON.parse(localStorage.getItem('queueMovies')) || [];\n\n    // Clear previous content from movies-container\n    const moviesContainer = document.getElementById('movies-container');\n    moviesContainer.innerHTML = '';\n\n    // Display each queued movie\n    queueMovies.forEach(movie => {\n        const movieElement = createMovieElement(movie);\n        moviesContainer.appendChild(movieElement);\n    });\n}\n\n// Function to create a movie element\nfunction createMovieElement(movie) {\n    const movieElement = document.createElement('div');\n    movieElement.classList.add('movie');\n    movieElement.innerHTML = `\n        <h2>${movie.title}</h2>\n        <p>${movie.overview}</p>\n        <img src=\"https://image.tmdb.org/t/p/w500${movie.poster_path}\" alt=\"${movie.title}\">\n    `;\n    return movieElement;\n}\n\n\n\n\n\n\n\n\n\n"],"names":["$66b821ea461d9f2a$var$API_KEY","$66b821ea461d9f2a$var$API_URL","$66b821ea461d9f2a$var$BASE_URL","$66b821ea461d9f2a$var$IMG_URL","$66b821ea461d9f2a$var$main","document","getElementById","$66b821ea461d9f2a$var$form","$66b821ea461d9f2a$var$search","$66b821ea461d9f2a$var$prev","$66b821ea461d9f2a$var$next","$66b821ea461d9f2a$var$current","$66b821ea461d9f2a$var$currentPage","$66b821ea461d9f2a$var$nextPage","$66b821ea461d9f2a$var$prevPage","$66b821ea461d9f2a$var$lastUrl","$66b821ea461d9f2a$var$totalPages","$66b821ea461d9f2a$var$getMovies","url","fetch","then","res","json","data","console","log","results","length","innerHTML","forEach","movie","title","poster_path","release_date","movieEl","createElement","classList","add","concat","appendChild","$66b821ea461d9f2a$var$showMovies","page","total_pages","innerText","remove","$66b821ea461d9f2a$var$pageCall","urlSplit","split","queryParams","key","toString","a","join","b","addEventListener","e","preventDefault","searchTerm","value","$66b821ea461d9f2a$var$searchURL","querySelector","click","$66b821ea461d9f2a$var$watchedButton","$66b821ea461d9f2a$var$queueButton","$66b821ea461d9f2a$var$createMovieElement","movieElement","overview","watchedMovies","JSON","parse","localStorage","getItem","moviesContainer","queueMovies"],"version":3,"file":"index.b6f52cba.js.map"}