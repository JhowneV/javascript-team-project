{"mappings":"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","sources":["src/js/script.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'api_key=b5e824a3d922f68ba211fcf6dbdcb6f5';\nconst API_URL = BASE_URL + '/discover/movie?sort_by-popularity.desc&' + API_KEY;\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\nconst searchURL = BASE_URL + '/search/movie?'+API_KEY;\n\nconst options = {\n    params: {\n        key: API_KEY,\n        query: \"\",\n        include_adult: false,\n        language: \"en-US\",\n        primary_release_year: \"\",\n        page: 1,\n        region: \"\",\n        year: \"\",\n       \n    }\n}\n\nconst main = document.getElementById('main');\nconst form = document.getElementById('search-form');\nconst search = document.getElementById('search-input');\nconst galleryEl = document.getElementById('gallery');\n\n// PAGINATION\nconst prev = document.getElementById('prev');\nconst next = document.getElementById('next');\nconst current = document.getElementById('current');\n\nvar currentPage = 1;\nvar nextPage = 2;\nvar prevPage = 3;\nvar lastUrl = '';\nvar totalPages = 100;\n\ngetMovies(API_URL);\n\n// DISPLAY MOVIE CARDS\nfunction getMovies(url) {\n    lastUrl = url;\n\n    fetch(url)\n        .then(res => res.json())\n        .then(data => {\n            console.log(data.results)\n            if(data.results.length !== 0){\n                showMovies(data.results);\n                currentPage = data.page;\n                nextPage = currentPage + 1;\n                prevPage = currentPage - 1;\n                totalPages = data.total_pages;\n\n                current.innerText = currentPage;\n                if(currentPage <= 1){\n                    prev.classList.add('disabled');\n                    next.classList.remove('disabled');\n                } else if(currentPage >= totalPages){\n                    prev.classList.remove('disabled');\n                    next.classList.add('disabled');\n                } else {\n                    prev.classList.remove('disabled');\n                    next.classList.remove('disabled');\n                }\n\n            } else {\n                main.innerHTML = `<h1 class=\"no-results\">No Results Found</h1>`\n            }\n\n    })\n}\n\nfunction showMovies(data) {\n    main.innerHTML = '';\n\n    data.forEach(movie => {\n        const { title, poster_path, release_date } = movie;\n        const movieEl = document.createElement('div');\n        movieEl.classList.add('movie');\n        movieEl.innerHTML = `\n            <img src=\"${poster_path? IMG_URL+poster_path: \"http:/>/via.placeholder.com/1080x1500\"}\"\n                alt=\"${title}\"/>\n            \n            <div class=\"movie-info\">\n                <h3>${title}</h3>\n                <div class=\"movie-details\">\n                    <span id=\"release_date\" class=\"${release_date}\">${release_date}</span>\n                </div>\n            </div>        \n        `\n        main.appendChild(movieEl);\n    })\n}\n\nform.addEventListener('submit', (e) => {\n    e.preventDefault();\n\n    const searchTerm = search.value;\n    \n    if(searchTerm) {\n        getMovies(searchURL+'&query='+searchTerm)\n    }else{\n        getMovies(API_URL);\n    }\n})\n\n\n// function for previous page\nprev.addEventListener('click', () => {\n    if(prevPage > 0) {\n        pageCall(prevPage);\n    }\n})\n\n// function for the next page\nnext.addEventListener('click', () => {\n    if(nextPage <= totalPages) {\n        pageCall(nextPage);\n    }\n})\n\nfunction pageCall(page) {\n    let urlSplit = lastUrl.split('?');\n    let queryParams = urlSplit[1].split('&');\n    let key = queryParams[queryParams.length - 1].split('=');\n    if(key[0] != 'page') {\n        let url = lastUrl + '&page=' + page;\n        getMovies(url);\n    }else{\n        key[1] = page.toString();\n        let a = key.join('=');\n        queryParams[queryParams.length - 1] = a;\n        let b = queryParams.join('&');\n        let url = urlSplit[0] +'?'+ b;\n        getMovies(url);\n    }\n}\n//////////////////////////////////////////////////////////////////////////////////\n///watched and queue button\n\nconst watchedButton = document.getElementById('watched-btn');\nconst queueButton = document.getElementById('queue-btn');\n\n// Add event listeners to the buttons\nwatchedButton.addEventListener('click', handleWatchedButtonClick);\nqueueButton.addEventListener('click', handleQueueButtonClick);\n\n// Function to handle clicking the \"Watched\" button\nfunction handleWatchedButtonClick() {\n    // Perform actions when the \"Watched\" button is clicked\n    console.log('Watched button clicked');\n    // You can add code here to display watched movies or perform other actions\n//////Watched Movies\n\nfunction displayWatchedMovies() {\n    // Initialize watched variable with data from localStorage\n    const watchedMovies = JSON.parse(localStorage.getItem('watchedMovies')) || [];\n\n    watchedMovies.forEach(movieId => {\n        fetch(`https://api.themoviedb.org/3/movie/${watched - movies}?api_key=YOUR_ACTUAL_API_KEY`)\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n                return response.json();\n            })\n            .then(data => {\n                displayMovie(data);\n            })\n            .catch(error => {\n                console.error('Error fetching movie:', error);\n            });\n    });\n}\n\nfunction displayMovie(movie) {\n    const moviesList = document.getElementById('main');\n    const movieElement = document.createElement('div');\n    movieElement.innerHTML = `\n        <h3>${movie.title}</h3>\n        <p>${movie.overview}</p>\n        <img src=\"https://image.tmdb.org/t/p/w500${movie.poster_path}\" alt=\"${movie.title}\">\n    `;\n    moviesList.appendChild(movieElement);\n}\n\n// Call the function to display watched movies when the page loads\nwindow.onload = function() {\n    displayWatchedMovies();\n};\n}\n\n// Function to handle clicking the \"Queue\" button\nfunction handleQueueButtonClick() {\n    // Perform actions when the \"Queue\" button is clicked\n    console.log('Queue button clicked');\n    // You can add code here to display queued movies or perform other actions\n/////////////////////////////////////////\n///     Queu \n\n}\n\n\n\n\n\n\n\n\n\n"],"names":["$66b821ea461d9f2a$var$API_KEY","$66b821ea461d9f2a$var$API_URL","$66b821ea461d9f2a$var$BASE_URL","$66b821ea461d9f2a$var$IMG_URL","$66b821ea461d9f2a$var$main","document","getElementById","$66b821ea461d9f2a$var$form","$66b821ea461d9f2a$var$search","$66b821ea461d9f2a$var$prev","$66b821ea461d9f2a$var$next","$66b821ea461d9f2a$var$current","$66b821ea461d9f2a$var$currentPage","$66b821ea461d9f2a$var$nextPage","$66b821ea461d9f2a$var$prevPage","$66b821ea461d9f2a$var$lastUrl","$66b821ea461d9f2a$var$totalPages","$66b821ea461d9f2a$var$getMovies","url","fetch","then","res","json","data","console","log","results","length","innerHTML","forEach","movie","title","poster_path","release_date","movieEl","createElement","classList","add","concat","appendChild","$66b821ea461d9f2a$var$showMovies","page","total_pages","innerText","remove","$66b821ea461d9f2a$var$pageCall","urlSplit","split","queryParams","key","toString","a","join","b","addEventListener","e","preventDefault","searchTerm","value","$66b821ea461d9f2a$var$searchURL","$66b821ea461d9f2a$var$watchedButton","$66b821ea461d9f2a$var$queueButton","displayWatchedMovies","JSON","parse","localStorage","getItem","movieId","watched","movies","response","ok","Error","moviesList","movieElement","overview","catch","error","window","onload"],"version":3,"file":"library.97e9fdb7.js.map"}